// <auto-generated />
using System;
using MaverickBankReal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaverickBankReal.Migrations
{
    [DbContext(typeof(BankDbContext))]
    partial class BankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaverickBankReal.Models.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountID"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountTypeID")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountID");

                    b.HasIndex("AccountTypeID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("MaverickBankReal.Models.AccountTypeMaster", b =>
                {
                    b.Property<int>("AccountTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountTypeID"));

                    b.Property<string>("AccountTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountTypeID");

                    b.ToTable("AccountTypes");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("AdminID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("MaverickBankReal.Models.BankEmployee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("BranchID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("BankEmployee");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Branch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchID"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("AadharNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PANNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Loan", b =>
                {
                    b.Property<int>("LoanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanStatusID")
                        .HasColumnType("int");

                    b.Property<int>("LoanTypeID")
                        .HasColumnType("int");

                    b.HasKey("LoanID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("LoanStatusID");

                    b.HasIndex("LoanTypeID");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("MaverickBankReal.Models.LoanStatusMaster", b =>
                {
                    b.Property<int>("LoanStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanStatusID"));

                    b.Property<string>("LoanStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanStatusID");

                    b.ToTable("LoanStatuses");
                });

            modelBuilder.Entity("MaverickBankReal.Models.LoanTypeMaster", b =>
                {
                    b.Property<int>("LoanTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanTypeID"));

                    b.Property<decimal>("DefaultInterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoanTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LoanTypeID");

                    b.ToTable("LoanTypes");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DestinationAccountID")
                        .HasColumnType("int");

                    b.Property<int>("SourceAccountID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionTypeID")
                        .HasColumnType("int");

                    b.HasKey("TransactionID");

                    b.HasIndex("DestinationAccountID");

                    b.HasIndex("SourceAccountID");

                    b.HasIndex("TransactionTypeID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MaverickBankReal.Models.TransactionTypeMaster", b =>
                {
                    b.Property<int>("TransactionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionTypeID"));

                    b.Property<string>("TransactionTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionTypeID");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("MaverickBankReal.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Account", b =>
                {
                    b.HasOne("MaverickBankReal.Models.AccountTypeMaster", "AccountType")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaverickBankReal.Models.Branch", "Branch")
                        .WithMany("Accounts")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaverickBankReal.Models.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");

                    b.Navigation("Branch");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Admin", b =>
                {
                    b.HasOne("MaverickBankReal.Models.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("MaverickBankReal.Models.Admin", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MaverickBankReal.Models.BankEmployee", b =>
                {
                    b.HasOne("MaverickBankReal.Models.Branch", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaverickBankReal.Models.User", "User")
                        .WithOne("BankEmployee")
                        .HasForeignKey("MaverickBankReal.Models.BankEmployee", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Customer", b =>
                {
                    b.HasOne("MaverickBankReal.Models.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("MaverickBankReal.Models.Customer", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Loan", b =>
                {
                    b.HasOne("MaverickBankReal.Models.Customer", "Customer")
                        .WithMany("Loans")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaverickBankReal.Models.LoanStatusMaster", "LoanStatus")
                        .WithMany("Loans")
                        .HasForeignKey("LoanStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaverickBankReal.Models.LoanTypeMaster", "LoanType")
                        .WithMany("Loans")
                        .HasForeignKey("LoanTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("LoanStatus");

                    b.Navigation("LoanType");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Transaction", b =>
                {
                    b.HasOne("MaverickBankReal.Models.Account", "DestinationAccount")
                        .WithMany("DestinationTransactions")
                        .HasForeignKey("DestinationAccountID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaverickBankReal.Models.Account", "SourceAccount")
                        .WithMany("SourceTransactions")
                        .HasForeignKey("SourceAccountID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaverickBankReal.Models.TransactionTypeMaster", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinationAccount");

                    b.Navigation("SourceAccount");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Account", b =>
                {
                    b.Navigation("DestinationTransactions");

                    b.Navigation("SourceTransactions");
                });

            modelBuilder.Entity("MaverickBankReal.Models.AccountTypeMaster", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Branch", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("MaverickBankReal.Models.Customer", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Loans");
                });

            modelBuilder.Entity("MaverickBankReal.Models.LoanStatusMaster", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("MaverickBankReal.Models.LoanTypeMaster", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("MaverickBankReal.Models.TransactionTypeMaster", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("MaverickBankReal.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("BankEmployee");

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
